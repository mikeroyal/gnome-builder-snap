name: gnome-builder
summary: Develop software for GNOME. 
description: An IDE for writing GNOME-based software.
  
adopt-info: devmode # use 'strict' once you have the right plugs and slots

grade: stable
confinement: devmode

architectures:
  - build-on: amd64
  - build-on: armhf
  - build-on: arm64
  
  parts:
  magic:
    plugin: nil
    build-environment: &buildenv
      - PATH: $PATH:$SNAPCRAFT_STAGE/usr/bin
      - XDG_DATA_DIRS: $XDG_DATA_DIRS:$SNAPCRAFT_STAGE/usr/share:/usr/share
      - PKG_CONFIG_PATH: $SNAPCRAFT_STAGE/pkgconfig-build
      - ACLOCAL_PATH: $SNAPCRAFT_STAGE/usr/share/aclocal
      - GI_TYPELIB_PATH: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/girepository-1.0:/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/girepository-1.0
      - VAPIDIR: $SNAPCRAFT_STAGE/usr/share/vala/vapi:$SNAPCRAFT_STAGE/usr/share/vala-0.40/vapi:$SNAPCRAFT_STAGE/usr/share/vala-0.36/vapi:$SNAPCRAFT_STAGE/usr/share/vala-0.30/vapi
      - VALAFLAGS: " --vapidir $SNAPCRAFT_STAGE/usr/share/vala/vapi $SNAPCRAFT_STAGE/usr/share/vala-0.40/vapi $SNAPCRAFT_STAGE/usr/share/vala-0.36/vapi $SNAPCRAFT_STAGE/usr/share/vala-0.30/vapi"
      - LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAPCRAFT_STAGE/usr/lib/vala-0.40
      - CMAKE_PREFIX_PATH: $CMAKE_PREFIX_PATH:$SNAPCRAFT_STAGE
      - CMAKE_INCLUDE_PATH: $CMAKE_INCLUDE_PATH:$SNAPCRAFT_STAGE/include:$SNAPCRAFT_STAGE/usr/include
      - CMAKE_LIBRARY_PATH: $CMAKE_LIBRARY_PATH:$SNAPCRAFT_STAGE/lib:$SNAPCRAFT_STAGE/usr/lib:$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET

apps:
  gnome-builder:
    command: bin/gnome-builder
    plugs:
      - home
      - network
      - removable-media

parts:
gnome-builder:
    plugin: 
    source: https://github.com/GNOME/gnome-builder.git
    source-type: git
    override-pull: |
     git clone https://github.com/GNOME/gnome-builder.git src/github.com/GNOME/gnome-builder
       cd src/github.com/GNOME/gnome-builder
      last_committed_tag="$(git describe --tags --abbrev=0)"
      last_committed_tag_ver="$(echo ${last_committed_tag} | sed 's/v//')"
      last_released_tag="$(snap info $SNAPCRAFT_PROJECT_NAME | awk '$1 == "beta:" { print $2 }')"
      # If the latest tag from the upstream project has not been released to
      # beta, build that tag instead of master.
      if [ "${last_committed_tag_ver}" != "${last_released_tag}" ]; then
        git fetch
        git checkout "${last_committed_tag}"
      fi
      snapcraftctl set-version "$(git describe --tags | sed 's/v//')"
      override-build: |
      export GOPATH=$PWD
      cd src/github.com/GNOME/gnome-builder
      env CGO_ENABLED=0 GOOS=linux \
      go build --ldflags "-s -w \
        -X 'github.com/GNOME/gnome-builder/version.GitCommit=$(git rev-list -1 HEAD)' \
        -X 'github.com/GNOME/gnome-builder/version.Version=$(git describe --tags --abbrev=0)'" \
        -a -installsuffix cgo -o $SNAPCRAFT_PART_INSTALL/bin/gnome-builder
    build-snaps:
      - c
    build-packages:
      - git
      - sed
